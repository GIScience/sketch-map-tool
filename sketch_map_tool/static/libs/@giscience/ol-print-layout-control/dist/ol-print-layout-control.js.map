{"version":3,"file":"ol-print-layout-control.js","sources":["../node_modules/ol/Disposable.js","../node_modules/ol/events/Event.js","../node_modules/ol/functions.js","../node_modules/ol/obj.js","../node_modules/ol/events/Target.js","../node_modules/ol/events/EventType.js","../node_modules/ol/events.js","../node_modules/ol/Observable.js","../node_modules/ol/Object.js","../src/ol-print-layout-control.ts"],"sourcesContent":["/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","import './ol-print-layout-control.css';\nimport Control from 'ol/control/Control';\nimport {transformExtent} from 'ol/proj';\nimport {getDistance} from 'ol/sphere';\nimport {Map, MapEvent, Object as OlObject} from 'ol';\nimport {Size} from 'ol/size';\nimport {unByKey} from 'ol/Observable';\nimport {EventsKey} from 'ol/events';\nimport {ObjectEvent} from 'ol/Object';\n\n// paper\nexport enum ORIENTATION {\n    PORTRAIT = 'portrait',\n    LANDSCAPE = 'landscape'\n}\n\nexport const PAPER_FORMAT = {\n    A4: 'A4',\n    A3: 'A3',\n    A2: 'A2',\n    A1: 'A1',\n    A0: 'A0',\n    LETTER: 'LETTER',\n    TABLOID: 'TABLOID',\n    BROADSHEET: 'BROADSHEET'\n} as const;\n\nconst INCH2MM = 25.4;\n\nconst PAPER_SIZE: { [format: string]: { short: number, long: number } } = {\n    A4: {short: 210, long: 297},\n    A3: {short: 297, long: 420},\n    A2: {short: 420, long: 594},\n    A1: {short: 594, long: 841},\n    A0: {short: 841, long: 1189},\n    LETTER: {short: 8.5 * INCH2MM, long: 11 * INCH2MM},\n    TABLOID: {short: 11 * INCH2MM, long: 17 * INCH2MM},\n    BROADSHEET: {short: 17 * INCH2MM, long: 22 * INCH2MM}\n\n} as const;\n\n\nconst PrintLayoutProperty = {\n    BBOX: 'bbox',\n    FORMAT: 'format',\n    ORIENTATION: 'orientation',\n    //in cm\n    MARGIN: 'margin'\n}\n\nexport type Options = {\n    margin?: MarginProps;\n    format?: typeof PAPER_FORMAT[keyof typeof PAPER_FORMAT];\n    orientation?: typeof ORIENTATION[keyof typeof ORIENTATION];\n}\n\n/**\n * The print-layout-control.\n * Add an instance of this to your OpenLayers Map.\n * @param {Options} [{format: 'A4', orientation: 'portrait', margin: {top: 2, bottom: 2, left: 2, right: 2}}] opt_options\n */\nexport class PrintLayout extends Control {\n    private printArea: HTMLDivElement;\n    private evtKeyMarginChange: EventsKey | undefined;\n\n\n    constructor(opt_options: Options = {}) {\n\n        const {\n            format = PAPER_FORMAT.A4,\n            orientation = ORIENTATION.PORTRAIT,\n            margin = {top: 2, bottom: 2, left: 2, right: 2}\n        } = opt_options;\n\n        const {element, printArea} = createDomElements();\n\n        super({\n            element: element,\n            render: (mapEvent) => {\n                this.onRender(mapEvent);\n            }\n        });\n\n        this.printArea = printArea;\n\n        // observable properties\n        this.set(PrintLayoutProperty.ORIENTATION, orientation);\n        this.set(PrintLayoutProperty.FORMAT, format);\n\n        this.setMargin(new Margin(margin));\n        this.set(PrintLayoutProperty.BBOX, null);\n\n        function createDomElements() {\n            const element = document.createElement('div');\n            element.className = 'paper-format';\n            const printArea = document.createElement('div');\n            printArea.className = 'print-area';\n            printArea.id = 'print-area';\n            element.appendChild(printArea);\n            return {element, printArea};\n        }\n    }\n\n    /**\n     * @public\n     */\n    getOrientation() {\n        return this.get(PrintLayoutProperty.ORIENTATION);\n    }\n\n    /**\n     * @public\n     * @param {ORIENTATION} orientation\n     */\n    setOrientation(orientation: ORIENTATION) {\n        if (orientation.toUpperCase() in ORIENTATION) {\n            this.set(PrintLayoutProperty.ORIENTATION, orientation);\n            this.setElementSize();\n            if (this.getMap()) {\n                this.getMap()!.renderSync();\n                this.handleBboxChange();\n            }\n            this.changed();\n        } else {\n            throw new Error(`orientation must be one of: ${Object.values(ORIENTATION)}`)\n        }\n    }\n\n    /**\n     * @public\n     */\n    getFormat() {\n        return this.get(PrintLayoutProperty.FORMAT);\n    }\n\n    /**\n     * @public\n     * @param format\n     */\n    setFormat(format: typeof PAPER_FORMAT[keyof typeof PAPER_FORMAT]) {\n        if (format.toUpperCase() in PAPER_FORMAT) {\n            this.set(PrintLayoutProperty.FORMAT, format.toUpperCase());\n            this.setElementSize();\n            if (this.getMap()) {\n                this.getMap()!.renderSync();\n                this.handleBboxChange();\n            }\n            this.changed();\n        } else {\n            throw new Error(`format must be on of: ${Object.values(PAPER_FORMAT)}`)\n        }\n    }\n\n    /**\n     * @public\n     */\n    getMargin(): Margin {\n        return this.get(PrintLayoutProperty.MARGIN);\n    }\n\n    /**\n     * @public\n     * @param {Margin} margin\n     */\n    setMargin(margin: Margin) {\n        if (this.evtKeyMarginChange) {\n            unByKey(this.evtKeyMarginChange)\n        }\n\n        this.evtKeyMarginChange = margin.on('propertychange', () => {\n            this.setElementSize();\n            if (this.getMap()) {\n                this.getMap()!.renderSync();\n                this.handleBboxChange();\n            }\n\n            if (this.hasListener('change:margin')) {\n                this.dispatchEvent(new ObjectEvent('change:margin', PrintLayoutProperty.MARGIN, null));\n            }\n            if (this.hasListener('propertychange')) {\n                this.dispatchEvent(new ObjectEvent('propertychange', PrintLayoutProperty.MARGIN, null));\n            }\n            this.changed();\n        });\n\n        this.set(PrintLayoutProperty.MARGIN, margin);\n        this.setElementSize();\n        if (this.getMap()) {\n            this.getMap()!.renderSync();\n            this.handleBboxChange();\n        }\n        this.changed();\n    }\n\n    /**\n     * @public\n     */\n    getBbox() {\n        // if not has map -> nothing we can do --> null\n        if (!this.getMap()) {\n            return null;\n        }\n        this.getMap()!.renderSync();\n        return this.get('bbox');\n    }\n\n    /**\n     * @public\n     */\n    getBboxAsLonLat() {\n        return (this.getBbox()) ? transformExtent(this.getBbox(), 'EPSG:3857', 'EPSG:4326') : null;\n    }\n\n    protected computeBbox() {\n        // if not has map -> nothing we can do --> null\n        if (!this.getMap()) {\n            return null;\n        }\n        const {left: p_left, top: p_top, right: p_right, bottom: p_bottom} = this.printArea.getBoundingClientRect();\n        const {x: ol_x, y: ol_y} = this.getMap()!.getViewport().getBoundingClientRect();\n\n        const rel_left = p_left - ol_x,\n            rel_top = p_top - ol_y,\n            rel_right = p_right - ol_x,\n            rel_bottom = p_bottom - ol_y;\n\n        const lowerLeft = this.getMap()!.getCoordinateFromPixel([rel_left, rel_bottom]);\n        const upperRight = this.getMap()!.getCoordinateFromPixel([rel_right, rel_top]);\n\n        return [...lowerLeft, ...upperRight];\n    }\n\n    /**\n     * Computes the scale denominator for the printed map\n     * @public\n     */\n    getScaleDenominator() {\n        if (this.getBboxAsLonLat() == null) {\n            return null;\n        }\n        const bbox4326 = this.getBboxAsLonLat();\n        const lowerLeft = bbox4326!.slice(0, 2);\n        const lowerRight = bbox4326!.slice(2, 4);\n        //haversine distance from lower left to lower right corner\n        const horizontalDistanceInMeter = getDistance(lowerLeft, lowerRight);\n        //width of box in MM\n        const {width: widthInMM} = this.getPrintBoxSizeInMM();\n        const widthInM = widthInMM / 1000;\n\n        return horizontalDistanceInMeter / widthInM;\n    }\n\n\n    /**\n     * Get the print box size (width, height) in dots (px) for printing.\n     *\n     * This is useful to determine the OGC-WMS params 'WIDTH' and 'HEIGHT'\n     * @public\n     * @param dpi {number} the desired print resolution in dots-per-inch (dpi)\n     * @returns {{width: number, height: number}}\n     */\n    getPrintBoxSizeInDots(dpi = 192) {\n        const {width: widthInMM, height: heightInMM} = this.getPrintBoxSizeInMM();\n        const widthInInch = widthInMM / INCH2MM;\n        const heightInInch = heightInMM / INCH2MM;\n\n        return {\n            width: Math.round(widthInInch * dpi),\n            height: Math.round(heightInInch * dpi)\n        }\n    }\n\n    /**\n     * @public\n     */\n    getPrintBoxSizeInMM() {\n        const {short, long}: { short: number, long: number } = PAPER_SIZE[this.getFormat()];\n        const horizontalMarginSum = (this.getMargin().getLeft() + this.getMargin().getRight()) * 10;\n        const verticalMarginSum = (this.getMargin().getTop() + this.getMargin().getBottom()) * 10;\n\n        return (this.getOrientation() === ORIENTATION.PORTRAIT) ? {\n            width: short - horizontalMarginSum,\n            height: long - verticalMarginSum\n        } : {\n            width: long - horizontalMarginSum,\n            height: short - verticalMarginSum\n        };\n    }\n\n    //screenPixel\n    protected getPrintMarginsInPx(): MarginProps {\n        const {width, height} = this.element.getBoundingClientRect();\n        const {long} = PAPER_SIZE[this.getFormat()];\n        const CM2PX_FACTOR = (this.getOrientation() === ORIENTATION.PORTRAIT) ? height / (long / 10) : width / (long / 10);\n        let marginsPx = {top: 0, bottom: 0, left: 0, right: 0};\n        let marginsCm = this.getMargin().getProperties();\n\n        let key: keyof MarginProps;\n        for (key in marginsCm) {\n            marginsPx[key] = marginsCm[key] * CM2PX_FACTOR;\n        }\n\n        return marginsPx;\n    }\n\n\n    protected getScreenMapAspectRatio() {\n\n        if (!this.getMap()?.getSize()) {\n            return 1;\n        }\n        const [w, h]: Size = this.getMap()!.getSize()!;\n\n        if (h === 0) {\n            return Number.MAX_SAFE_INTEGER;\n        }\n        return w / h;\n    }\n\n    protected getPaperMapAspectRatio() {\n        const {long, short} = PAPER_SIZE[this.getFormat()];\n        return (this.getOrientation() === ORIENTATION.PORTRAIT) ? short / long : long / short;\n    }\n\n    protected getRestrictingDimension() {\n        return (this.getScreenMapAspectRatio() < this.getPaperMapAspectRatio()) ? 'width' : 'height';\n    }\n\n    protected setElementSize() {\n        //set size\n        if (this.getRestrictingDimension() === 'width') {\n            this.element.style.height = '';\n            this.element.style.width = '80%';\n        } else {\n            this.element.style.height = '80%';\n            this.element.style.width = '';\n        }\n\n        //set aspect ratio\n        const {long, short} = PAPER_SIZE[this.getFormat()];\n        const aspectRatioPortrait = short / long;\n\n        this.element.style.aspectRatio = String((this.getOrientation() === ORIENTATION.PORTRAIT) ? aspectRatioPortrait : 1 / aspectRatioPortrait);\n\n\n        //set print box after paper is defined\n        this.printArea.style.top = `${this.getPrintMarginsInPx().top}px`;\n        this.printArea.style.bottom = `${this.getPrintMarginsInPx().bottom}px`;\n        this.printArea.style.left = `${this.getPrintMarginsInPx().left}px`;\n        this.printArea.style.right = `${this.getPrintMarginsInPx().right}px`;\n    }\n\n    handleBboxChange() {\n        this.set(PrintLayoutProperty.BBOX, this.computeBbox())\n        this.changed();\n    }\n\n    _map: Map | null | undefined;\n\n    onRender(_mapEvent: MapEvent) {\n\n        //register events when the control has a map and starts rendering\n        if (!this._map || this._map !== this.getMap()) {\n            this._map = this.getMap();\n            //register zooming and panning\n            const changeViewEvtKey = this.getMap()!.getView().on('change', this.handleBboxChange.bind(this));\n            //register resizing of the map container\n            const changeMapSizeEvtKey = this.getMap()!.on('change:size', () => {\n                this.setElementSize();\n                this.handleBboxChange();\n            });\n\n            // unregister events when control is removed from map\n            this.getMap()!.getControls().once('remove', (e) => {\n                if (e.element === this) {\n                    this._map!.getView().un('change', changeViewEvtKey.listener);\n                    this._map!.un('change:size', changeMapSizeEvtKey.listener);\n                    this._map = null;\n                }\n            });\n\n            //init bbox once the control has a map and is rendered\n            this.setElementSize();\n            this.set(PrintLayoutProperty.BBOX, this.computeBbox(), true);\n            this.dispatchEvent('change');\n        }\n    }\n}\n\n/**\n *\n */\ntype MarginProps = { top: number, bottom: number, left: number, right: number };\n\n/**\n * The Margin Class to set paper margins in cm.\n */\nexport class Margin extends OlObject {\n\n    constructor(marginProps: Partial<MarginProps> = {}) {\n        super();\n        const {top = 0, bottom = 0, left = 0, right = 0} = marginProps;\n\n        this.set('top', top);\n        this.set('bottom', bottom);\n        this.set('left', left);\n        this.set('right', right);\n    }\n\n    /**\n     * @public\n     */\n    getProperties(): MarginProps {\n        return <MarginProps>super.getProperties();\n    }\n\n    /**\n     * @public\n     */\n    getTop() {\n        return this.get('top');\n    }\n\n    /**\n     * @public\n     * @param topMarginInCm\n     */\n    setTop(topMarginInCm: number) {\n\n        //no negative values, cast to numbers\n        topMarginInCm = Math.max(0, Number(topMarginInCm));\n\n        this.set('top', topMarginInCm);\n        this.changed();\n    }\n\n    /**\n     * @public\n     */\n    getBottom() {\n        return this.get('bottom');\n    }\n\n    /**\n     * @public\n     * @param bottomMarginInCm\n     */\n    setBottom(bottomMarginInCm: number) {\n\n        //no negative values, cast to numbers\n        bottomMarginInCm = Math.max(0, Number(bottomMarginInCm));\n\n        this.set('bottom', bottomMarginInCm);\n        this.changed();\n    }\n\n    /**\n     * @public\n     */\n    getLeft() {\n        return this.get('left');\n    }\n\n    /**\n     * @public\n     * @param leftMarginInCm\n     */\n    setLeft(leftMarginInCm: number) {\n\n        //no negative values, cast to numbers\n        leftMarginInCm = Math.max(0, Number(leftMarginInCm));\n\n        this.set('left', leftMarginInCm);\n        this.changed();\n    }\n\n    /**\n     * @public\n     */\n    getRight() {\n        return this.get('right');\n    }\n\n    /**\n     * @public\n     * @param rightMarginInCm\n     */\n    setRight(rightMarginInCm: number) {\n\n        //no negative values, cast to numbers\n        rightMarginInCm = Math.max(0, Number(rightMarginInCm));\n\n        this.set('right', rightMarginInCm);\n        this.changed();\n    }\n}\n\n// Expose PrintLayout as ol.control.PrintLayout if using a full build of\n// OpenLayers\n\n\n// @ts-ignore\nif (window['ol'] && window['ol']['control']) {\n    // @ts-ignore\n    window['ol']['control']['PrintLayout'] = PrintLayout;\n    // @ts-ignore\n    window['ol']['control']['PrintLayout']['Margin'] = Margin;\n    // @ts-ignore\n    window['PAPER_FORMAT'] = PAPER_FORMAT;\n    // @ts-ignore\n    window['ORIENTATION'] = ORIENTATION;\n}"],"names":["Disposable","Disposable$1","BaseEvent","type","Event","VOID","clear","object","property","Target","target","listener","listeners","listenersForType","event","isString","evt","dispatching","pendingRemovals","propagate","i","ii","pr","index","EventTarget","EventType","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","len","keys","unByKey","ObjectEvent","oldValue","ORIENTATION","PAPER_FORMAT","INCH2MM","PAPER_SIZE","PrintLayoutProperty","PrintLayout","Control","opt_options","format","orientation","margin","element","printArea","createDomElements","mapEvent","__publicField","Margin","transformExtent","p_left","p_top","p_right","p_bottom","ol_x","ol_y","rel_left","rel_top","rel_right","rel_bottom","lowerLeft","upperRight","bbox4326","lowerRight","horizontalDistanceInMeter","getDistance","widthInMM","widthInM","dpi","heightInMM","widthInInch","heightInInch","short","long","horizontalMarginSum","verticalMarginSum","width","height","CM2PX_FACTOR","marginsPx","marginsCm","_a","w","h","aspectRatioPortrait","_mapEvent","changeViewEvtKey","changeMapSizeEvtKey","e","OlObject","marginProps","top","bottom","left","right","topMarginInCm","bottomMarginInCm","leftMarginInCm","rightMarginInCm"],"mappings":"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"}