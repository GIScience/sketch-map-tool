version: "3.9"
services:
  flask:
    build:
      context: ./
      dockerfile: Dockerfile
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
    depends_on:
      - celery
      - redis
      - postgres
    environment:
      SMT-DATA-STORE: "redis://redis:6379"
      SMT-BROKER-URL: "redis://redis:6379"
      SMT-RESULT-BACKEND: "db+postgresql://smt:smt@postgres:5432"
    ports:
      - "127.0.0.1:8081:8080"
    entrypoint: ["poetry", "run", "waitress-serve", "sketch_map_tool.routes:app"]
  celery:
    build:
      context: ./
      dockerfile: Dockerfile
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4G
    depends_on:
      - redis
      - postgres
    environment:
      SMT-DATA-STORE: "redis://redis:6379"
      SMT-BROKER-URL: "redis://redis:6379"
      SMT-RESULT-BACKEND: "db+postgresql://smt:smt@postgres:5432"
    entrypoint: ["poetry", "run", "celery", "--app", "sketch_map_tool.tasks", "worker", "--beat", "--concurrency", "4", "--loglevel", "WARNING", "-E"]
  redis:
    image: redis:7
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
    # Start with persistent storage
    # dump redis db every 10 minutes (if 1 value changed)
    entrypoint: ["redis-server", "--save", "\"\""]
    volumes:
        - redis_data:/data
  postgres:
    image: postgres:15
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
    environment:
      POSTGRES_PASSWORD: smt
      POSTGRES_USER: smt
    volumes:
        - pg_data:/var/lib/postgresql/data
volumes:
    redis_data:
    pg_data:
