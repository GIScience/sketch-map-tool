version: "3.9"
services:
  flask:
    # Web app
    build:
      context: ./
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - celery
      - redis
      - postgres
    environment:
      SMT-BROKER-URL: "redis://redis:6379"
      SMT-RESULT-BACKEND: "db+postgresql://smt:smt@postgres:5432"
    ports:
      - "127.0.0.1:8081:8080"
    entrypoint:
      [
        "mamba",
        "run",
        "--no-capture-output",
        "--name",
        "smt",
        "waitress-serve",
        "sketch_map_tool.routes:app",
      ]
  celery:
    # Task queue
    build:
      context: ./
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - redis
      - postgres
    environment:
      SMT-BROKER-URL: "redis://redis:6379"
      SMT-RESULT-BACKEND: "db+postgresql://smt:smt@postgres:5432"
    entrypoint:
      [
        "mamba",
        "run",
        "--no-capture-output",
        "--name",
        "smt",
        "celery",
        "--app",
        "sketch_map_tool.tasks",
        "worker",
        "--beat",
        "--concurrency",
        "4",
        "--loglevel",
        "INFO",
        "-E",
      ]
  flower:
    # Monitoring of Celery
    image: mher/flower
    restart: unless-stopped
    ports:
      - "5555:5555"
    entrypoint: ["celery", "--broker=redis://redis:6379", "flower"]
  redis:
    # Message broker
    image: redis:7
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    # Start with persistent storage
    # dump redis db every 10 minutes (if 1 value changed)
    entrypoint: ["redis-server", "--save", "\"\""]
    volumes:
      - redis_data:/data
  postgres:
    # Result backend
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: smt
      POSTGRES_USER: smt
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
volumes:
  redis_data:
  pg_data:
